MEMORY
{
//  Cx_IMU:  at 0x00008000, len = 0x00038000;	// NMC0 (128*7)kB
//  C0_IMU0: at 0x00000000, len = 0x00008000;	// NMC0 128kB reserved for boot-loader
	C0_IMU1: at 0x00008000, len = 0x00008000;	// NMC0 128kB
	C0_IMU2: at 0x00010000, len = 0x00008000;	// NMC0 128kB
	C0_IMU3: at 0x00018000, len = 0x00008000;	// NMC0 128kB
	C0_IMU4: at 0x00020000, len = 0x00008000;	// NMC0 128kB
	C0_IMU5: at 0x00028000, len = 0x00008000;	// NMC0 128kB
	C0_IMU6: at 0x00030000, len = 0x00008000;	// NMC0 128kB
	C0_IMU7: at 0x00038000, len = 0x00008000;	// NMC0 128kB
	
	SHMEM0:		at 0x000A0000, len = 0x00010000;	// shared 256kB
	SHMEM1:  	at 0x000B0000, len = 0x00010000;	// shared 256kB
	EMI_PRINTF: at 0x20000000, len = 0x00100000;	// DDR2   512MB
	EMI:		at 0x20100000, len = 0x07000000;	// DDR2   512MB
}

SEGMENTS
{
	code: in C0_IMU7;
	data: in C0_IMU6;
	seg_imu1 :in C0_IMU1;
	seg_imu2 :in C0_IMU2;
	seg_imu3 :in C0_IMU3;
	seg_imu4 :in C0_IMU4;
	seg_imu5 :in C0_IMU5;
	seg_imu6 :in C0_IMU6;
	seg_imu7 :in C0_IMU7;
	seg_DDR  :in EMI;
	shared0  :in EMI_PRINTF;

}

SECTIONS
{
	.text: in code;
	.init: in code;
	.fini: in code;

	.data_imu1     : in seg_imu1;
	.data_imu2     : in seg_imu2;
	.data_imu3     : in seg_imu3;
	.data_imu4     : in seg_imu4;
	.data_imu5     : in seg_imu5;
	.data_imu6     : in seg_imu6;
	.data_imu7     : in seg_imu7;
	.data_DDR      : in seg_DDR;
	.data_imu1.bss : in seg_imu1;
	.data_imu2.bss : in seg_imu2;
	.data_imu3.bss : in seg_imu3;
	.data_imu4.bss : in seg_imu4;
	.data_imu5.bss : in seg_imu5;
	.data_imu6.bss : in seg_imu6;
	.data_imu7.bss : in seg_imu7;
	.data_DDR.bss : in seg_DDR;

	.heap          : in seg_imu1;
    .heap1         : in seg_imu2;
    .heap2         : in seg_imu3;
    .heap3         : in seg_imu4;
	
	.data: in data;
	.bss: in data;
	.stack: in data;
	
	.rpc_services.bss: in shared0;
	.rpc_services    : in shared0;

	
}
